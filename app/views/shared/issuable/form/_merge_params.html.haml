- issuable = local_assigns.fetch(:issuable)

- return unless issuable.is_a?(MergeRequest)
- return if issuable.closed_without_fork?

-# This check is duplicated below, to avoid conflicts with EE.
- return unless issuable.can_remove_source_branch?(current_user)

<<<<<<< HEAD
- if issuable.can_remove_source_branch?(current_user)
  .form-group
    .col-sm-10.col-sm-offset-2
=======
.form-group
  .col-sm-10.col-sm-offset-2
    - if issuable.can_remove_source_branch?(current_user)
>>>>>>> 0d9311624754fbc3e0b8f4a28be576e48783bf81
      .checkbox
        - initial_checkbox_value = issuable.merge_params.key?('force_remove_source_branch') ? issuable.force_remove_source_branch? : true
        = label_tag 'merge_request[force_remove_source_branch]' do
          = hidden_field_tag 'merge_request[force_remove_source_branch]', '0', id: nil
          = check_box_tag 'merge_request[force_remove_source_branch]', '1', initial_checkbox_value
          Remove source branch when merge request is accepted.
<<<<<<< HEAD

.form-group
  .col-sm-10.col-sm-offset-2
    .checkbox
      = label_tag 'merge_request[squash]' do
        = hidden_field_tag 'merge_request[squash]', '0', id: nil
        = check_box_tag 'merge_request[squash]', '1', issuable.squash
        Squash commits when merge request is accepted.
        = link_to 'About this feature', help_page_path('user/project/merge_requests/squash_and_merge')
=======
>>>>>>> 0d9311624754fbc3e0b8f4a28be576e48783bf81
