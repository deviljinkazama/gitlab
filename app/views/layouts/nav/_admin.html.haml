= render 'layouts/nav/admin_settings'
.scrolling-tabs-container{ class: nav_control_class }
  .fade-left
    = icon('angle-left')
  .fade-right
    = icon('angle-right')
  %ul.nav-links.scrolling-tabs
    = nav_link(controller: %w(dashboard admin projects users groups builds runners cohorts), html_options: {class: 'home'}) do
      = link_to admin_root_path, title: 'Overview', class: 'shortcuts-tree' do
        %span
          Overview
    = nav_link(controller: %w(system_info background_jobs logs health_check requests_profiles)) do
      = link_to admin_system_info_path, title: 'Monitoring' do
        %span
          Monitoring

    = nav_link(controller: :broadcast_messages) do
      = link_to admin_broadcast_messages_path, title: 'Messages' do
        %span
          Messages
<<<<<<< HEAD

    = nav_link(controller: :hooks) do
=======
    = nav_link(controller: [:hooks, :hook_logs]) do
>>>>>>> upstream/master
      = link_to admin_hooks_path, title: 'Hooks' do
        %span
          System Hooks

    = nav_link(controller: :applications) do
      = link_to admin_applications_path, title: 'Applications' do
        %span
          Applications

    = nav_link(controller: :abuse_reports) do
      = link_to admin_abuse_reports_path, title: "Abuse Reports" do
        %span
          Abuse Reports
          %span.badge.count= number_with_delimiter(AbuseReport.count(:all))

    = nav_link(controller: :licenses) do
      = link_to admin_license_path, title: 'License' do
        %span
          License

    - if akismet_enabled?
      = nav_link(controller: :spam_logs) do
        = link_to admin_spam_logs_path, title: "Spam Logs" do
          %span
            Spam Logs

    = nav_link(controller: :push_rules) do
      = link_to admin_push_rule_path, title: 'Push Rules' do
        %span
          Push Rules

    = nav_link(controller: :geo_nodes) do
      = link_to admin_geo_nodes_path, title: 'Geo Nodes' do
        %span
          Geo Nodes
